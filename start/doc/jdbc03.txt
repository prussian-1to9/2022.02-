# jdbc03

BigDecimal
==> 정수(形)로 표현할 수 없는 숫자를 사용하기 위한 클래스.
	주로 DB와 연동할 때 사용한다.
	oracle의 NUMBER타입 최대 32자리수 인데,
	java의 정수형은 최대 19자리인 것에서 오는 오차를 처리하기 위해 사용.
	
	ex.
		BigDecimal big = new BigDecimal("12345678901234567890");
		
-----------------------------------------------------------------------------
형식화 클래스
==> 주로 처리된 결과를 보기 좋게 출력하기 위해 사용되는 클래스.
	(형식을 지정해, 그 형식에 맞는 문자열을 만들어준다.)
	
	1. DecimalFormat
	==> 형식을 정해, 숫자데이터를 그 형식에 맞게 문자열로 변환.
		
		방법
			DecimalFormat(String pattern)		(을 주로 사용)
			
		어떤 모양으로 변환시킬지를 알려주는 패턴을 입력하며 만들어준다.
		
		주요함수
			format(double number)
			==> 숫자를 원하는 형태로 변환
			
			패턴 지정법
			
				0		: 한 자리 숫자. 무효숫자는 0으로 표시
				#		: 한 자리 숫자. 무효숫자 비표시
				.		: 소수점 위치
				,		: 3자리마다 , 표시 하도록 한다.
				-		: 음수일 경우, - 부호의 위치
				E		: 실수일 경우 지수 형태로 표시
				:		: 패턴을 구분
						  (양수 : 음수의 경우를 구분해 처리할 때 사용)
				%		: 백분율 표시
				\u00A4	: 화폐단위 표시
				
	
	2. SimpleDateFormat
	==> 처리 결과 중, 지정한 형식으로 날짜를 문자열로 표시하기 위한 클래스
		생성 방법&주요함수는 DecimalFormat과 동일.
		
		패턴지정법
		
			G	: BC / AD
			y	: 년도
			M	: 월
			w	: 해당 년의 몇번째 주
			W	: 해당 월의 몇번째 주
			D	: 해당 년의 며칠
			d	: 해당 월의 며칠
			F	: 해당 월의 몇번째 요일 (반환값 : 1~5의 숫자)
			E	: 요일
			a	: AM / PM
			H	: 시간 (00 ~ 23)
			h	: 시간 (01 ~ 12)
			k	: 시간 (01 ~ 24)
			K	: 시간 (00 ~ 11)
			m	: 분 (0 ~ 59)
			s	: 초 (0 ~59)
			S	: ms (0 ~ 999)
			z	: Time Zone (General time zone)
			Z	: Time Zone (RFC 822 time zone)
			'	: escape 문자 (특수문자 표현할 때 사용)
			
		사용 예
			SimpleDateFormat form = new SimpleDateFormat("yyyy년 MM월 dd일 HH:mm:ss");
			
	
	3. ChoiceFormat
	==> switch 등을 이용해야 하는 경우, 이것을 간소화시키기 위한 방식.
		특정 범위의 값은 특정 문자열로 교체시키는 기능을 가진 클래스
		
		생성방법
			ChoiceFormat(double[] limits, String[] formats)
			
				limits : 치환될 범위
				format : 치환할 문자
				
	4. MessageFormat
	==> 특정 문자열 특정 위치에 내용만 변경되는 경우,
		문자열 전체를 만드는게 아닌, 변경되는 내용만 쇽샥해서
		하나의 문자열로 만드는 클래스.
		
		참고함수
			parse(String source)
			==> 주어진 문자열 중, 실제 변화되는 데이터 부분만 알아내는 함수.