# day10

생성자 [함수] (Constructor)
	클래스를 사용하기 위해 new 시키는 순간 자동 실행되는 함수
	new 명령과 함께 호출해줘야 하는 함수
	전역변수 셋팅해줄 때 초기화 해주는 함수를 생각하면 쉽다.
	
	즉, 클래스를 new 한다?
	Object로 만들어 실행한다.
	-> 이 때, 실행한다는 개념은 결국 Object를 만드는 순간 뭔가 실행한다는 것.
	
	각 클래스들은 객체로 만들어지는 순간
	그 클래스의 최소한의 일을 할 필요가 있다.
	-> 그 '기본적인 일'을 처리할 수 있게 만들라구 생성자 함수를 만든다~ 이거지라.
	
	규칙)
		1. 함수의 이름은 반드시 클래스 이름과 동일. (대소문자까지)
		2. 반환값 절대 XX! (void라고 기술해도 안됨!)
		3. 매개변수는 가져도 ㄱㅊ
		
		* 만약 클래스를 생성하며 생성자를 만들지 않으면?
			매개변수, 함수 블럭 내용이 없는 기본생성자를 JVM이 만들어준다.
			
			생성자를 한개라도 만들면 JVM은 기본 생성자를 만들지 않는다.
			-> 내용이 없더라도 기본 생성자를 만들어주는 게 좋다.
		ex.
			class Test {
			}
			
			public Test (int a) {}
			// int a, b;	==> 매개변수가 정의되면 형태가 같은 것으로 본다.
			
			public Test (String name){}
			
			이 클래스를 객체로 만들 때는
				new Test();		 ==> 0
				new Test(10);	 ==> 0
				new Test("런쥔");==> 0
	
	결론!
		매개변수가 있는 생성자를 호출하기 위해서는
		new 시킬 때 매개변수에 필요한 데이터를 주면서 해줘야 한다.
		
		
	자바는 생성자 함수가 없어도 new 될 수 있다.
	하지만 이것은 생성자 함수를 이용하지 않는 것이 아닌,
	JVM이 기본 생성자를 내부적으로 만들어 준 후
	이 생성자를 이용하는 것임.
	
------------------------------------------------------------------------------------
생성자 함수 이용 방법
	생성자 함수는 그 클래스를 어떻게 new 시킬지 알려주는 함수다.
	
	즉, 생성자가 요구하는 매개변수가 무엇인지를 보면
	그 클래스를 객체로 생성할 수 있는 방법이 나온다.
	
	-> 클래스를 생성할 때 다양한 방식의 생성자를 정의 해 두는것이 좋다.
	
	+ this() 는?
	  생성자 함수는 원칙적으로 개발자가 직접 호출할 수 없다.
	  
	  현재 생성자를 실행하는 도중에 다른 생성자를 강제로 호출하는 유일한 방법
	  규칙)
	  	1. 반드시 생성자 안에서만 사용할 수 있다. (일반 함수 내에선X)
	  	2. 반드시 생성자 내에서, 첫 문장 첫 명령으로만 사용해야 함.
	  	   (이 함수 호출 이전의 다른 문장이 있으면 에러 발생!)
	  	   
	  왜 사용하지요?
	  	클래스는 한 가지 목적을 가진 프로그램의 집합이다.
	  	비슷한 틀 안에서 여러가지를 이행한다.
	  	-> overloading된 생성자가 하는 역할은 거의 비슷하다.
	  	   비슷한 코드를 여러개 작성하는 불편함을 피하기 위해 사용.
	  	   
------------------------------------------------------------------------------------
가변 인자

	개요
		우리가 함수를 만들 때
		그 함수가 갖고 있는 매개변수와 동일한 개수, 형태, 순서를 이용해 함수를 호출해야 한다.
	
		But!!! 데이터의 개수를 지정해줄 수 없는 경우라면?
		-> 이런 경우 사용할 수 있는 개념의 매개변수가 '가변인자'이다~~!
		
	특징
		데이터의 개수에 상관 없이 모든 데이터를 받을 수 있다.
		※ 가변인자로 정의된 매개변수는 자동 배열변수가 된다.
		  -> 입력된 데이터를 다룰 때, 배열처럼 사용해야 한다.
		※ 가변인자 앞에는 다른 매개변수가 와도 되지만, 뒤엔 안된다!
		
	형식
		접근지정자 변환값타입 함수이름(변수타입...변수이름) {}
		ex. 정수 여러개
			public void printSum(int...n) {
			}
			호출할 때==> PrintSum(10, 20, 30, 40); 가능쓰